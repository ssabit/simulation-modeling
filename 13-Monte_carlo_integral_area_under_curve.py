# -*- coding: utf-8 -*-
"""SM_Assignment-3-2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1md3eJMmKNeM-nw4w2ZDGCYSe3vCL3kaW
"""

import math
import random
import matplotlib.pyplot as plt

trials=[100,1000,5000,10000]
#f(x)=x*e^x 0-5
error_list=[]
error_list2=[]
for i in trials:
  a=0
  b=4
  #print("Trials",i)
  print("--------")
  func_value=0
  func_sum=0
  func_squre_sum=0
  func_avg=0
  func_squard_avg=0
  integral_value=0
  error=0
  
  for j in range(i):
    x=random.uniform(a, b)
    func_value=2*math.sqrt(x)
    func_sum=func_sum+func_value
    func_squre=func_value**2
    func_squre_sum=func_squre_sum+func_squre

  func_avg=func_sum/i
  func_squard_avg=func_squre_sum/i
  integral_value=(b-a)*func_avg
  error= ((b-a)/math.sqrt(i))*(math.sqrt(func_squard_avg-(func_avg**2)))
  error_list.append(error)
  

  print("For Points",i)
  print("Integral Value",integral_value)
  print("Error",error)
  print("Error",error_list)

  a=4
  b=8
  #print("Trials",i)
  print("--------")
  func_value2=0
  func_sum2=0
  func_squre_sum2=0
  func_avg2=0
  func_squard_avg2=0
  integral_value2=0
  error2=0
  
  for j in range(i):
    x=random.uniform(a, b)
    func_value2=8-x
    func_sum2=func_sum2+func_value2
    func_squre2=func_value2**2
    func_squre_sum2=func_squre_sum2+func_squre2

  func_avg2=func_sum2/i
  func_squard_avg2=func_squre_sum2/i
  integral_value2=(b-a)*func_avg2
  error2= ((b-a)/math.sqrt(i))*(math.sqrt(func_squard_avg2-(func_avg2**2)))
  error_list2.append(error2)
  
  final_area=integral_value+integral_value2
  print("For Points2",i)
  print("Integral Value2",integral_value2)
  print("Error2",error2)
  print("Error2",error_list2)
  print("Total Area",final_area)

plt.figure(figsize=(8, 6))

x=["100","1000","5000","10000"]

#plt.ylim(0, 100)

plt.bar(x,error_list, tick_label = x, width = 0.2, color = ['steelblue']) 

plt.xlabel('Number of trials') 

plt.ylabel('Error for part 1 (0-4)') 

plt.title('Error for part 1 (0-4) vs Number of trials') 

plt.show()

plt.figure(figsize=(8, 6))

x=["100","1000","5000","10000"]

#plt.ylim(0, 2)

plt.bar(x,error_list2, tick_label = x, width = 0.2, color = ['steelblue']) 

plt.xlabel('Number of trials') 

plt.ylabel('Error for part 1 (4-8)') 

plt.title('Error for part 1 (4-8) vs Number of trials') 

plt.show()