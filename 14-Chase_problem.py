# -*- coding: utf-8 -*-
"""Sm1-assignment5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dbm45SEw5zFIdYwKa1ufQkO_A2d0fEl-
"""

import math
import matplotlib.pyplot as plt

def dis(x1,y1,x2,y2):
  return math.sqrt((x1-x2)**2 + (y1-y2)**2)

# Initial positions
x_A=[10]
y_A=[0]

x_B=[0]
y_B=[10]

x_C=[10]
y_C=[10]

x_D=[0]
y_D=[0]

# Velocities
v_A=3
v_B=5
v_C=7
v_D=2

# Shoot counters
D_hit_by_B=0
C_hit_by_A=0
B_hit_by_C=0
A_hit_by_D=0

# Shoot positions
D_hit_by_B_list_x=[]
D_hit_by_B_list_y=[]

C_hit_by_A_list_x=[]
C_hit_by_A_list_y=[]

B_hit_by_C_list_x=[]
B_hit_by_C_list_y=[]

A_hit_by_D_list_x=[]
A_hit_by_D_list_y=[]


# Initial distances
distDB= dis(x_D[0],y_D[0],x_B[0],y_B[0])
distCA= dis(x_C[0],y_C[0],x_A[0],y_A[0])
distBC= dis(x_B[0],y_B[0],x_C[0],y_C[0])
distAD= dis(x_A[0],y_A[0],x_D[0],y_D[0])

for t in range(1,20):
  # D is chased by B
  sin = (y_D[t-1]- y_B[t-1]) / distDB
  cos= (x_D[t-1] - x_B[t-1]) / distDB
  new_x_B= x_B[t-1]+ v_B* cos
  new_y_B= y_B[t-1] + v_B*sin
  x_B.append(new_x_B)
  y_B.append(new_y_B)

  # C is chased by A 
  sin = (y_C[t-1]- y_A[t-1]) / distCA
  cos= (x_C[t-1] - x_A[t-1]) / distCA
  new_x_A= x_A[t-1]+ v_A* cos
  new_y_A= y_A[t-1] + v_A*sin
  x_A.append(new_x_A)
  y_A.append(new_y_A)
 
  # B is chased by C
  sin = (y_B[t-1]- y_C[t-1]) / distBC
  cos= (x_B[t-1] - x_C[t-1]) / distBC
  new_x_C= x_C[t-1]+ v_C* cos
  new_y_C= y_C[t-1] + v_C*sin
  x_C.append(new_x_C)
  y_C.append(new_y_C)

  # A is chased by D
  sin = (y_A[t-1]- y_D[t-1]) / distAD
  cos= (x_A[t-1] - x_D[t-1]) / distAD
  new_x_D= x_D[t-1]+ v_D* cos
  new_y_D= y_D[t-1] + v_D*sin
  x_D.append(new_x_D)
  y_D.append(new_y_D)
  
  # New distances
  distDB= dis(x_D[t],y_D[t],x_B[t],y_B[t])
  distCA= dis(x_C[t],y_C[t],x_A[t],y_A[t])
  distBC= dis(x_B[t],y_B[t],x_C[t],y_C[t])
  distAD= dis(x_A[t],y_A[t],x_D[t],y_D[t])

  # Check shoot postion

  if distDB<5:
    D_hit_by_B=D_hit_by_B+1
    D_hit_by_B_list_x.append(x_B[t])
    D_hit_by_B_list_y.append(y_B[t])


  if distCA<5:
    C_hit_by_A=C_hit_by_A+1
    C_hit_by_A_list_x.append(x_A[t])
    C_hit_by_A_list_y.append(x_A[t])

  if distBC<5:
    B_hit_by_C=B_hit_by_C+1
    B_hit_by_C_list_x.append(x_C[t])
    B_hit_by_C_list_y.append(x_C[t])
  
  if distAD<5:
    A_hit_by_D=A_hit_by_D+1
    A_hit_by_D_list_x.append(x_D[t])
    A_hit_by_D_list_y.append(x_D[t])
    
    
print("D hit by B:",D_hit_by_B)
print("C hit by A:",C_hit_by_A)
print("B hit by C:",B_hit_by_C)
print("A hit by D:",A_hit_by_D)

print("D hit by B position x:",D_hit_by_B_list_x)
print("D hit by B position y:",D_hit_by_B_list_y)

print("C hit by A position x:",C_hit_by_A_list_x)
print("C hit by A position y:",C_hit_by_A_list_y)

print("B hit by C position x:",B_hit_by_C_list_x)
print("B hit by C position y:",B_hit_by_C_list_y)

print("A hit by D position x:",A_hit_by_D_list_x)
print("A hit by D position y:",A_hit_by_D_list_y)

# figure size 
plt.figure(figsize=(10, 10))

# potting the points 
plt.plot(x_A,y_A,label= "A") 
plt.plot(x_B,y_B,label= "B")  
plt.plot(x_C,y_C,label= "C") 
plt.plot(x_D,y_D,label= "D")  

# giving a title to my graph 
plt.title('Path of each car')

# showing legend 
plt.legend() 

# function to show the plot 
plt.show()